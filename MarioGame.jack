/**
 * Implements the Mario game.
 * This simple game allows the user to move a black mario around
 * the screen, and change the mario's size during the movement.
 * When the game starts, a mario of 30 by 30 pixels is shown at the
 * top-left corner of the screen. The user controls the mario as follows.
 * The 4 arrow keys are used to move the mario up, down, left, and right.
 * The 'z' and 'x' keys are used, respectively, to decrement and increment
 * the mario's size. The 'q' key is used to quit the game.
 */

class MarioGame {
   field Mario mario; // the mario of this game
   field int direction; // the mario's current direction: 
                        // 0=none, 1=up, 2=down, 3=left, 4=right
   field Brick brick;
   /** Constructs a new Mario Run Game. */
   constructor MarioGame new() {
      // Creates a 30 by 30 pixels mario and positions it at the top-left
      // of the screen.
      let mario = Mario.new(0, 210, 30);
      let brick = Brick.new(100, 120, 30);
      let brick = Brick.new(125, 120, 30);
      let brick = Brick.new(150, 120, 30);

      let brick = Brick.new(352, 120, 30);
      let brick = Brick.new(377, 120, 30);
      let brick = Brick.new(402, 120, 30);
      let brick = Brick.new(427, 120, 30);

      do Output.moveCursor(12, 17);
      do Output.printString("?");
      do Output.moveCursor(12, 52);
      do Output.printString("?");     
      let direction = 0;  // initial state is no movement
      return this;
   }

   /** Disposes this game. */
   method void dispose() {
      do mario.dispose();
      do brick.dispose();
      do Memory.deAlloc(this);
      return;
   }

   /** Moves the mario in the current direction. */
   method void movemario() {
      if (direction = 3) { do mario.moveLeft(); }
      if (direction = 4) { do mario.moveRight(); }
      do Sys.wait(5);  // delays the next movement
      return;
   }

   /** Runs the game: handles the user's inputs and moves the mario accordingly */
   method void run() {
      var char key;  // the key currently pressed by the user
      var boolean exit;
      let exit = false;
      
      while (~exit) {
         // waits for a key to be pressed
         while (key = 0) {
            let key = Keyboard.keyPressed();
         }
         if (key = 81)  { let exit = true; }     // q key
         if (key = 90)  { do mario.decSize(); } // z key
         if (key = 88)  { do mario.incSize(); } // x key
         if (key = 131) { do mario.Jump(); }   // up arrow
         if (key = 130) { let direction = 3; }   // left arrow
         if (key = 132) { let direction = 4; }   // right arrow

         // waits for the key to be released
         while (~(key = 0)) {
            let key = Keyboard.keyPressed();
            do movemario();
         }
     } // while
     return;
   }
}



